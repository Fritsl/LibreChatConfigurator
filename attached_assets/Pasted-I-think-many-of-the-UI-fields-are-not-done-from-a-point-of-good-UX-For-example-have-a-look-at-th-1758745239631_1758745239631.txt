I think many of the UI fields are not done from a point of good UX. 

For example, have a look at the MCP servers tab, it could instead be done like this:

=================================

MCP Servers (Array of Objects):
- Type: complex array
- Description: Model Context Protocol servers configuration
- Default: []

ARRAY MANAGEMENT FUNCTIONS:
- Add Server Button: Creates new empty server object
- Remove Server Button: Deletes server at specified index
- Data Test ID: button-add-mcp-server, button-remove-mcp-server-{index}

EACH MCP SERVER OBJECT CONTAINS:

Server Name
- Type: text
- Description: Unique name for this MCP server
- Required: true
- Data Test ID: input-mcp-server-name-{index}

Server Type
- Type: select
- Description: MCP server connection type
- Options: ["stdio", "websocket", "SSE", "streamable-http"]
- Default: "streamable-http"
- Data Test ID: input-mcp-server-type-{index}

Server URL
- Type: text
- Description: HTTP endpoint for the MCP server
- Required: false (depends on type)
- Data Test ID: input-mcp-server-url-{index}

Timeout (ms)
- Type: number
- Description: Request timeout in milliseconds
- Default: 30000
- Min: 1000, Max: 300000
- Data Test ID: input-mcp-server-timeout-{index}

HTTP Headers (Dynamic Key-Value Array):
- Type: object (key-value pairs)
- Description: HTTP headers for server requests
- Default: {}

HEADER MANAGEMENT FUNCTIONS:
- Add Header Button: Adds new empty header key-value pair
- Remove Header Button: Deletes specific header
- Data Test ID: button-add-header-{index}, button-remove-header-{index}-{headerIndex}

Header Key
- Type: text
- Description: HTTP header name
- Data Test ID: input-header-key-{index}-{headerIndex}

Header Value
- Type: text
- Description: HTTP header value
- Data Test ID: input-header-value-{index}-{headerIndex}

Server Instructions
- Type: textarea
- Description: Detailed instructions for how the AI should use this MCP server
- Rows: 32 (resizable)
- Data Test ID: input-mcp-server-instructions-{index}