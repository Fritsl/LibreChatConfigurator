import { z } from "zod";

/**
 * Centralized Field Registry
 * 
 * SINGLE SOURCE OF TRUTH for all configuration fields.
 * Adding a new field requires only updating this registry - everything else is auto-generated.
 */

// Field types supported by the registry
export type FieldType = 
  | 'string' 
  | 'boolean' 
  | 'number' 
  | 'array' 
  | 'object'
  | 'enum'
  | 'url'
  | 'email';

// Field descriptor - defines all metadata for a configuration field
export interface FieldDescriptor {
  // Unique identifier (camelCase config field name)
  id: string;
  
  // Environment variable name (SCREAMING_SNAKE_CASE)
  envKey?: string;
  
  // YAML path (dot-notation for nested fields, e.g., "endpoints.openAI.titleModel")
  yamlPath?: string;
  
  // Field type
  type: FieldType;
  
  // Default value
  defaultValue: any;
  
  // Category for UI organization
  category: string;
  
  // Zod schema for validation (optional, for complex types)
  zodSchema?: z.ZodTypeAny;
  
  // For enum types
  enumValues?: readonly string[];
  
  // For array types
  arrayItemType?: FieldType;
  arrayItemSchema?: z.ZodTypeAny;
  
  // For number types
  min?: number;
  max?: number;
  
  // Description/documentation
  description?: string;
  
  // Whether this field should be exported to .env (some YAML-only fields shouldn't)
  exportToEnv?: boolean;
  
  // Whether this field should be exported to YAML (some .env-only fields shouldn't)
  exportToYaml?: boolean;
  
  // Custom transformer for env string -> typed value
  envTransformer?: (value: string) => any;
  
  // Custom transformer for YAML value -> config value
  yamlTransformer?: (value: any) => any;
  
  // For nested object fields - child fields
  children?: FieldDescriptor[];
}

/**
 * Field Registry - All configuration fields defined here
 * 
 * When adding a new field:
 * 1. Add it to this registry with complete metadata
 * 2. That's it! Import/export/validation/schema generation all happen automatically
 */
export const FIELD_REGISTRY: FieldDescriptor[] = [
  // =============================================================================
  // App Configuration
  // =============================================================================
  {
    id: 'version',
    yamlPath: 'version',
    type: 'string',
    defaultValue: '0.8.0-rc4',
    category: 'app',
    description: 'LibreChat version',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'cache',
    yamlPath: 'cache',
    type: 'boolean',
    defaultValue: true,
    category: 'app',
    description: 'Enable caching',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileStrategy',
    yamlPath: 'fileStrategy',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'File handling strategy',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'imageOutputType',
    yamlPath: 'imageOutputType',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'Image output format',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'secureImageLinks',
    yamlPath: 'secureImageLinks',
    type: 'boolean',
    defaultValue: false,
    category: 'app',
    description: 'Secure image link flag',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'temporaryChatRetention',
    yamlPath: 'temporaryChatRetention',
    type: 'number',
    defaultValue: 720,
    category: 'app',
    description: 'Chat retention time in minutes',
    min: 1,
    max: 43200,
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'appTitle',
    envKey: 'APP_TITLE',
    type: 'string',
    defaultValue: 'LibreChat',
    category: 'app',
    description: 'Application title',
  },
  {
    id: 'customWelcome',
    envKey: 'CUSTOM_WELCOME',
    yamlPath: 'interface.customWelcome',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'Custom welcome message',
  },
  {
    id: 'customFooter',
    envKey: 'CUSTOM_FOOTER',
    yamlPath: 'interface.customFooter',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'Custom footer text',
  },
  {
    id: 'helpAndFAQURL',
    envKey: 'HELP_AND_FAQ_URL',
    type: 'url',
    defaultValue: '',
    category: 'app',
    description: 'Help and FAQ URL',
  },
  
  // =============================================================================
  // Server Configuration
  // =============================================================================
  {
    id: 'host',
    envKey: 'HOST',
    type: 'string',
    defaultValue: '0.0.0.0',
    category: 'server',
    description: 'Server host',
  },
  {
    id: 'port',
    envKey: 'PORT',
    type: 'number',
    defaultValue: 3080,
    category: 'server',
    description: 'Server port',
    min: 1,
    max: 65535,
  },
  {
    id: 'nodeEnv',
    envKey: 'NODE_ENV',
    type: 'enum',
    enumValues: ['development', 'production', 'test'] as const,
    defaultValue: 'production',
    category: 'server',
    description: 'Node environment',
  },
  {
    id: 'domainClient',
    envKey: 'DOMAIN_CLIENT',
    type: 'string',
    defaultValue: '',
    category: 'server',
    description: 'Client domain',
  },
  {
    id: 'domainServer',
    envKey: 'DOMAIN_SERVER',
    type: 'string',
    defaultValue: '',
    category: 'server',
    description: 'Server domain',
  },
  {
    id: 'noIndex',
    envKey: 'NO_INDEX',
    type: 'boolean',
    defaultValue: false,
    category: 'server',
    description: 'Disable search engine indexing',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Core AI API Keys
  // =============================================================================
  {
    id: 'openaiApiKey',
    envKey: 'OPENAI_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'OpenAI API Key',
  },
  {
    id: 'openaiApiBase',
    envKey: 'OPENAI_API_BASE',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'OpenAI API Base URL',
  },
  {
    id: 'openaiReverseProxy',
    envKey: 'OPENAI_REVERSE_PROXY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'OpenAI Reverse Proxy URL (deprecated, use custom endpoints)',
  },
  {
    id: 'openaiModerationReverseProxy',
    envKey: 'OPENAI_MODERATION_REVERSE_PROXY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'OpenAI Moderation Reverse Proxy URL',
  },
  {
    id: 'anthropicApiKey',
    envKey: 'ANTHROPIC_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Anthropic API Key',
  },
  {
    id: 'googleApiKey',
    envKey: 'GOOGLE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Google AI API Key',
  },
  {
    id: 'groqApiKey',
    envKey: 'GROQ_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Groq API Key',
  },
  {
    id: 'mistralApiKey',
    envKey: 'MISTRAL_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Mistral AI API Key',
  },
  
  {
    id: 'deepseekApiKey',
    envKey: 'DEEPSEEK_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'DeepSeek API Key',
  },
  {
    id: 'perplexityApiKey',
    envKey: 'PERPLEXITY_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Perplexity API Key',
  },
  {
    id: 'fireworksApiKey',
    envKey: 'FIREWORKS_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Fireworks AI API Key',
  },
  {
    id: 'togetheraiApiKey',
    envKey: 'TOGETHERAI_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Together AI API Key',
  },
  {
    id: 'huggingfaceToken',
    envKey: 'HUGGINGFACE_TOKEN',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Hugging Face Token',
  },
  {
    id: 'xaiApiKey',
    envKey: 'XAI_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'xAI API Key',
  },
  {
    id: 'nvidiaApiKey',
    envKey: 'NVIDIA_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'NVIDIA API Key',
  },
  {
    id: 'sambanovaApiKey',
    envKey: 'SAMBANOVA_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'SambaNova API Key',
  },
  {
    id: 'hyperbolicApiKey',
    envKey: 'HYPERBOLIC_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Hyperbolic API Key',
  },
  {
    id: 'klusterApiKey',
    envKey: 'KLUSTER_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Kluster API Key',
  },
  {
    id: 'nanogptApiKey',
    envKey: 'NANOGPT_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'NanoGPT API Key',
  },
  {
    id: 'glhfApiKey',
    envKey: 'GLHF_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'GLHF API Key',
  },
  {
    id: 'apipieApiKey',
    envKey: 'APIPIE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'APIPie API Key',
  },
  {
    id: 'unifyApiKey',
    envKey: 'UNIFY_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Unify API Key',
  },
  {
    id: 'openrouterKey',
    envKey: 'OPENROUTER_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'OpenRouter API Key',
  },
  
  // =============================================================================
  // Azure OpenAI
  // =============================================================================
  {
    id: 'azureApiKey',
    envKey: 'AZURE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Azure OpenAI API Key',
  },
  {
    id: 'azureOpenaiApiInstanceName',
    envKey: 'AZURE_OPENAI_API_INSTANCE_NAME',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Azure OpenAI Instance Name',
  },
  {
    id: 'azureOpenaiApiDeploymentName',
    envKey: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Azure OpenAI Deployment Name',
  },
  {
    id: 'azureOpenaiApiVersion',
    envKey: 'AZURE_OPENAI_API_VERSION',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Azure OpenAI API Version',
  },
  {
    id: 'azureOpenaiModels',
    envKey: 'AZURE_OPENAI_MODELS',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'Azure OpenAI Models (comma-separated)',
  },
  
  // =============================================================================
  // AWS Bedrock
  // =============================================================================
  {
    id: 'bedrockAccessKeyId',
    envKey: 'BEDROCK_ACCESS_KEY_ID',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'AWS Bedrock Access Key ID',
  },
  {
    id: 'bedrockSecretAccessKey',
    envKey: 'BEDROCK_SECRET_ACCESS_KEY',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'AWS Bedrock Secret Access Key',
  },
  {
    id: 'bedrockRegion',
    envKey: 'BEDROCK_REGION',
    type: 'string',
    defaultValue: '',
    category: 'ai-providers',
    description: 'AWS Bedrock Region',
  },
  
  // =============================================================================
  // Web Search
  // =============================================================================
  {
    id: 'serperApiKey',
    envKey: 'SERPER_API_KEY',
    yamlPath: 'webSearch.serperApiKey',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Serper API Key',
  },
  {
    id: 'searxngInstanceUrl',
    envKey: 'SEARXNG_INSTANCE_URL',
    yamlPath: 'webSearch.searxngInstanceUrl',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'SearXNG Instance URL',
  },
  {
    id: 'searxngApiKey',
    envKey: 'SEARXNG_API_KEY',
    yamlPath: 'webSearch.searxngApiKey',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'SearXNG API Key',
  },
  {
    id: 'firecrawlApiKey',
    envKey: 'FIRECRAWL_API_KEY',
    yamlPath: 'webSearch.firecrawlApiKey',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Firecrawl API Key',
  },
  {
    id: 'firecrawlApiUrl',
    envKey: 'FIRECRAWL_API_URL',
    yamlPath: 'webSearch.firecrawlApiUrl',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Firecrawl API URL',
  },
  {
    id: 'webSearchFirecrawlOptionsFormats',
    yamlPath: 'webSearch.firecrawlOptions.formats',
    type: 'array',
    defaultValue: [],
    category: 'web-search',
    arrayItemType: 'string',
    description: 'Firecrawl output formats',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsOnlyMainContent',
    yamlPath: 'webSearch.firecrawlOptions.onlyMainContent',
    type: 'boolean',
    defaultValue: false,
    category: 'web-search',
    description: 'Firecrawl only main content',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsTimeout',
    yamlPath: 'webSearch.firecrawlOptions.timeout',
    type: 'number',
    defaultValue: 30000,
    category: 'web-search',
    description: 'Firecrawl timeout in milliseconds',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsWaitFor',
    yamlPath: 'webSearch.firecrawlOptions.waitFor',
    type: 'number',
    defaultValue: 0,
    category: 'web-search',
    description: 'Firecrawl wait time in milliseconds',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsBlockAds',
    yamlPath: 'webSearch.firecrawlOptions.blockAds',
    type: 'boolean',
    defaultValue: false,
    category: 'web-search',
    description: 'Firecrawl block ads',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsRemoveBase64Images',
    yamlPath: 'webSearch.firecrawlOptions.removeBase64Images',
    type: 'boolean',
    defaultValue: false,
    category: 'web-search',
    description: 'Firecrawl remove base64 images',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsMobile',
    yamlPath: 'webSearch.firecrawlOptions.mobile',
    type: 'boolean',
    defaultValue: false,
    category: 'web-search',
    description: 'Firecrawl mobile mode',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsMaxAge',
    yamlPath: 'webSearch.firecrawlOptions.maxAge',
    type: 'number',
    defaultValue: 0,
    category: 'web-search',
    description: 'Firecrawl cache max age',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchFirecrawlOptionsProxy',
    yamlPath: 'webSearch.firecrawlOptions.proxy',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Firecrawl proxy URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'jinaApiKey',
    envKey: 'JINA_API_KEY',
    yamlPath: 'webSearch.jinaApiKey',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Jina API Key',
  },
  {
    id: 'jinaApiUrl',
    envKey: 'JINA_API_URL',
    yamlPath: 'webSearch.jinaApiUrl',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Jina API URL',
  },
  {
    id: 'cohereApiKey',
    envKey: 'COHERE_API_KEY',
    yamlPath: 'webSearch.cohereApiKey',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Cohere API Key (for reranking)',
  },
  
  // =============================================================================
  // Database Configuration
  // =============================================================================
  {
    id: 'mongoUri',
    envKey: 'MONGO_URI',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'MongoDB Connection URI',
  },
  {
    id: 'mongoRootUsername',
    envKey: 'MONGO_ROOT_USERNAME',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'MongoDB Root Username',
  },
  {
    id: 'mongoRootPassword',
    envKey: 'MONGO_ROOT_PASSWORD',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'MongoDB Root Password',
  },
  {
    id: 'mongoDbName',
    envKey: 'MONGO_DB_NAME',
    type: 'string',
    defaultValue: 'LibreChat',
    category: 'database',
    description: 'MongoDB Database Name',
  },
  {
    id: 'redisUri',
    envKey: 'REDIS_URI',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'Redis Connection URI',
  },
  {
    id: 'redisUsername',
    envKey: 'REDIS_USERNAME',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'Redis Username',
  },
  {
    id: 'redisPassword',
    envKey: 'REDIS_PASSWORD',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'Redis Password',
  },
  {
    id: 'redisKeyPrefix',
    envKey: 'REDIS_KEY_PREFIX',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'Redis Key Prefix',
  },
  {
    id: 'redisKeyPrefixVar',
    envKey: 'REDIS_KEY_PREFIX_VAR',
    type: 'string',
    defaultValue: '',
    category: 'database',
    description: 'Redis Key Prefix Variable',
  },
  {
    id: 'redisMaxListeners',
    envKey: 'REDIS_MAX_LISTENERS',
    type: 'number',
    defaultValue: 10,
    category: 'database',
    description: 'Redis Max Listeners',
    min: 1,
    max: 100,
  },
  {
    id: 'redisPingInterval',
    envKey: 'REDIS_PING_INTERVAL',
    type: 'number',
    defaultValue: 30000,
    category: 'database',
    description: 'Redis Ping Interval (ms)',
    min: 1000,
    max: 300000,
  },
  {
    id: 'redisUseAlternativeDNSLookup',
    envKey: 'REDIS_USE_ALTERNATIVE_DNS_LOOKUP',
    type: 'boolean',
    defaultValue: false,
    category: 'database',
    description: 'Redis Use Alternative DNS Lookup',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Security Configuration
  // =============================================================================
  {
    id: 'jwtSecret',
    envKey: 'JWT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'JWT Secret Key',
  },
  {
    id: 'jwtRefreshSecret',
    envKey: 'JWT_REFRESH_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'JWT Refresh Secret Key',
  },
  {
    id: 'credsKey',
    envKey: 'CREDS_KEY',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'Credentials Encryption Key',
  },
  {
    id: 'credsIV',
    envKey: 'CREDS_IV',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'Credentials Initialization Vector',
  },
  {
    id: 'minPasswordLength',
    envKey: 'MIN_PASSWORD_LENGTH',
    type: 'number',
    defaultValue: 8,
    category: 'security',
    description: 'Minimum Password Length',
    min: 4,
    max: 64,
  },
  {
    id: 'emailVerificationRequired',
    envKey: 'EMAIL_VERIFICATION_REQUIRED',
    type: 'boolean',
    defaultValue: false,
    category: 'security',
    description: 'Require Email Verification',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowUnverifiedEmailLogin',
    envKey: 'ALLOW_UNVERIFIED_EMAIL_LOGIN',
    type: 'boolean',
    defaultValue: true,
    category: 'security',
    description: 'Allow Unverified Email Login',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'sessionExpiry',
    envKey: 'SESSION_EXPIRY',
    type: 'number',
    defaultValue: 900000,
    category: 'security',
    description: 'Session Expiry (ms)',
    min: 60000,
    max: 86400000,
  },
  {
    id: 'refreshTokenExpiry',
    envKey: 'REFRESH_TOKEN_EXPIRY',
    type: 'number',
    defaultValue: 604800000,
    category: 'security',
    description: 'Refresh Token Expiry (ms)',
    min: 3600000,
    max: 2592000000,
  },
  
  // =============================================================================
  // Authentication Configuration
  // =============================================================================
  {
    id: 'allowRegistration',
    envKey: 'ALLOW_REGISTRATION',
    type: 'boolean',
    defaultValue: true,
    category: 'auth',
    description: 'Allow User Registration',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowEmailLogin',
    envKey: 'ALLOW_EMAIL_LOGIN',
    type: 'boolean',
    defaultValue: true,
    category: 'auth',
    description: 'Allow Email/Password Login',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowSocialLogin',
    envKey: 'ALLOW_SOCIAL_LOGIN',
    type: 'boolean',
    defaultValue: false,
    category: 'auth',
    description: 'Allow Social Login',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowSocialRegistration',
    envKey: 'ALLOW_SOCIAL_REGISTRATION',
    type: 'boolean',
    defaultValue: false,
    category: 'auth',
    description: 'Allow Social Registration',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowPasswordReset',
    envKey: 'ALLOW_PASSWORD_RESET',
    type: 'boolean',
    defaultValue: true,
    category: 'auth',
    description: 'Allow Password Reset',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Email Configuration
  // =============================================================================
  {
    id: 'emailService',
    envKey: 'EMAIL_SERVICE',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Email Service Provider',
  },
  {
    id: 'emailUsername',
    envKey: 'EMAIL_USERNAME',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Email Username/Address',
  },
  {
    id: 'emailPassword',
    envKey: 'EMAIL_PASSWORD',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Email Password',
  },
  {
    id: 'emailFrom',
    envKey: 'EMAIL_FROM',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Email From Address',
  },
  {
    id: 'emailFromName',
    envKey: 'EMAIL_FROM_NAME',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Email From Name',
  },
  {
    id: 'mailgunApiKey',
    envKey: 'MAILGUN_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Mailgun API Key',
  },
  {
    id: 'mailgunDomain',
    envKey: 'MAILGUN_DOMAIN',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Mailgun Domain',
  },
  {
    id: 'mailgunHost',
    envKey: 'MAILGUN_HOST',
    type: 'string',
    defaultValue: '',
    category: 'email',
    description: 'Mailgun Host',
  },
  
  // =============================================================================
  // OAuth Providers
  // =============================================================================
  {
    id: 'googleClientId',
    envKey: 'GOOGLE_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Google OAuth Client ID',
  },
  {
    id: 'googleClientSecret',
    envKey: 'GOOGLE_CLIENT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Google OAuth Client Secret',
  },
  {
    id: 'googleCallbackUrl',
    envKey: 'GOOGLE_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Google OAuth Callback URL',
  },
  {
    id: 'githubClientId',
    envKey: 'GITHUB_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'GitHub OAuth Client ID',
  },
  {
    id: 'githubClientSecret',
    envKey: 'GITHUB_CLIENT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'GitHub OAuth Client Secret',
  },
  {
    id: 'githubCallbackUrl',
    envKey: 'GITHUB_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'GitHub OAuth Callback URL',
  },
  {
    id: 'discordClientId',
    envKey: 'DISCORD_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Discord OAuth Client ID',
  },
  {
    id: 'discordClientSecret',
    envKey: 'DISCORD_CLIENT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Discord OAuth Client Secret',
  },
  {
    id: 'discordCallbackUrl',
    envKey: 'DISCORD_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Discord OAuth Callback URL',
  },
  {
    id: 'facebookClientId',
    envKey: 'FACEBOOK_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Facebook OAuth Client ID',
  },
  {
    id: 'facebookClientSecret',
    envKey: 'FACEBOOK_CLIENT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Facebook OAuth Client Secret',
  },
  {
    id: 'facebookCallbackUrl',
    envKey: 'FACEBOOK_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Facebook OAuth Callback URL',
  },
  {
    id: 'appleClientId',
    envKey: 'APPLE_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Apple OAuth Client ID',
  },
  {
    id: 'applePrivateKey',
    envKey: 'APPLE_PRIVATE_KEY',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Apple OAuth Private Key',
  },
  {
    id: 'appleKeyId',
    envKey: 'APPLE_KEY_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Apple OAuth Key ID',
  },
  {
    id: 'appleTeamId',
    envKey: 'APPLE_TEAM_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Apple OAuth Team ID',
  },
  {
    id: 'appleCallbackUrl',
    envKey: 'APPLE_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'Apple OAuth Callback URL',
  },
  {
    id: 'openidUrl',
    envKey: 'OPENID_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect URL',
  },
  {
    id: 'openidClientId',
    envKey: 'OPENID_CLIENT_ID',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Client ID',
  },
  {
    id: 'openidClientSecret',
    envKey: 'OPENID_CLIENT_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Client Secret',
  },
  {
    id: 'openidCallbackUrl',
    envKey: 'OPENID_CALLBACK_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Callback URL',
  },
  {
    id: 'openidScope',
    envKey: 'OPENID_SCOPE',
    type: 'string',
    defaultValue: 'openid profile email',
    category: 'oauth',
    description: 'OpenID Connect Scope',
  },
  {
    id: 'openidSessionSecret',
    envKey: 'OPENID_SESSION_SECRET',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Session Secret',
  },
  {
    id: 'openidIssuer',
    envKey: 'OPENID_ISSUER',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Issuer',
  },
  {
    id: 'openidButtonLabel',
    envKey: 'OPENID_BUTTON_LABEL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Button Label',
  },
  {
    id: 'openidImageUrl',
    envKey: 'OPENID_IMAGE_URL',
    type: 'string',
    defaultValue: '',
    category: 'oauth',
    description: 'OpenID Connect Image URL',
  },
  
  // =============================================================================
  // Enabled Endpoints
  // =============================================================================
  {
    id: 'enabledEndpoints',
    envKey: 'ENDPOINTS',
    type: 'array',
    defaultValue: [],
    category: 'endpoints',
    description: 'Enabled Endpoints (comma-separated in ENV)',
    arrayItemType: 'string',
    envTransformer: (val) => val.split(',').map(v => v.trim()).filter(v => v),
  },
  
  // =============================================================================
  // AWS Legacy Keys (for S3 file storage)
  // =============================================================================
  {
    id: 'awsAccessKeyId',
    envKey: 'AWS_ACCESS_KEY_ID',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS Access Key ID (legacy, for S3)',
  },
  {
    id: 'awsSecretAccessKey',
    envKey: 'AWS_SECRET_ACCESS_KEY',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS Secret Access Key (legacy, for S3)',
  },
  {
    id: 'awsRegion',
    envKey: 'AWS_REGION',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS Region (legacy, for S3)',
  },
  {
    id: 'awsBedrockRegion',
    envKey: 'AWS_BEDROCK_REGION',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS Bedrock Region (alternative to AWS_REGION)',
  },
  {
    id: 'awsEndpointURL',
    envKey: 'AWS_ENDPOINT_URL',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS Endpoint URL (for S3-compatible services)',
  },
  {
    id: 'awsBucketName',
    envKey: 'AWS_BUCKET_NAME',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'AWS S3 Bucket Name',
  },
  
  // =============================================================================
  // File Storage
  // =============================================================================
  {
    id: 'fileUploadPath',
    envKey: 'FILE_UPLOAD_PATH',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Local File Upload Path',
  },
  {
    id: 'firebaseApiKey',
    envKey: 'FIREBASE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase API Key',
  },
  {
    id: 'firebaseAuthDomain',
    envKey: 'FIREBASE_AUTH_DOMAIN',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase Auth Domain',
  },
  {
    id: 'firebaseProjectId',
    envKey: 'FIREBASE_PROJECT_ID',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase Project ID',
  },
  {
    id: 'firebaseStorageBucket',
    envKey: 'FIREBASE_STORAGE_BUCKET',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase Storage Bucket',
  },
  {
    id: 'firebaseMessagingSenderId',
    envKey: 'FIREBASE_MESSAGING_SENDER_ID',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase Messaging Sender ID',
  },
  {
    id: 'firebaseAppId',
    envKey: 'FIREBASE_APP_ID',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Firebase App ID',
  },
  {
    id: 'azureStorageConnectionString',
    envKey: 'AZURE_STORAGE_CONNECTION_STRING',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Azure Storage Connection String',
  },
  {
    id: 'azureStoragePublicAccess',
    envKey: 'AZURE_STORAGE_PUBLIC_ACCESS',
    type: 'boolean',
    defaultValue: false,
    category: 'file-storage',
    description: 'Azure Storage Public Access',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'azureContainerName',
    envKey: 'AZURE_CONTAINER_NAME',
    type: 'string',
    defaultValue: '',
    category: 'file-storage',
    description: 'Azure Container Name',
  },
  
  // =============================================================================
  // Search & External APIs
  // =============================================================================
  {
    id: 'googleSearchApiKey',
    envKey: 'GOOGLE_SEARCH_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'external-apis',
    description: 'Google Search API Key',
  },
  {
    id: 'googleCSEId',
    envKey: 'GOOGLE_CSE_ID',
    type: 'string',
    defaultValue: '',
    category: 'external-apis',
    description: 'Google Custom Search Engine ID',
  },
  {
    id: 'bingSearchApiKey',
    envKey: 'BING_SEARCH_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'external-apis',
    description: 'Bing Search API Key',
  },
  {
    id: 'openweatherApiKey',
    envKey: 'OPENWEATHER_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'external-apis',
    description: 'OpenWeather API Key',
  },
  
  // =============================================================================
  // DALL-E Image Generation
  // =============================================================================
  {
    id: 'dalleApiKey',
    envKey: 'DALLE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E API Key',
  },
  {
    id: 'dalle3ApiKey',
    envKey: 'DALLE3_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 3 API Key',
  },
  {
    id: 'dalle2ApiKey',
    envKey: 'DALLE2_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 2 API Key',
  },
  {
    id: 'dalleReverseProxy',
    envKey: 'DALLE_REVERSE_PROXY',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E Reverse Proxy URL',
  },
  {
    id: 'dalle3BaseUrl',
    envKey: 'DALLE3_BASEURL',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 3 Base URL',
  },
  {
    id: 'dalle2BaseUrl',
    envKey: 'DALLE2_BASEURL',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 2 Base URL',
  },
  {
    id: 'dalle3SystemPrompt',
    envKey: 'DALLE3_SYSTEM_PROMPT',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 3 System Prompt',
  },
  {
    id: 'dalle2SystemPrompt',
    envKey: 'DALLE2_SYSTEM_PROMPT',
    type: 'string',
    defaultValue: '',
    category: 'image-generation',
    description: 'DALL-E 2 System Prompt',
  },
  
  // =============================================================================
  // RAG API
  // =============================================================================
  {
    id: 'ragApiURL',
    envKey: 'RAG_API_URL',
    type: 'string',
    defaultValue: '',
    category: 'rag',
    description: 'RAG API URL',
  },
  {
    id: 'ragOpenaiApiKey',
    envKey: 'RAG_OPENAI_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'rag',
    description: 'RAG OpenAI API Key',
  },
  {
    id: 'ragPort',
    envKey: 'RAG_PORT',
    type: 'number',
    defaultValue: 8000,
    category: 'rag',
    description: 'RAG API Port',
    min: 1,
    max: 65535,
  },
  {
    id: 'ragHost',
    envKey: 'RAG_HOST',
    type: 'string',
    defaultValue: '',
    category: 'rag',
    description: 'RAG API Host',
  },
  {
    id: 'collectionName',
    envKey: 'COLLECTION_NAME',
    type: 'string',
    defaultValue: '',
    category: 'rag',
    description: 'RAG Collection Name',
  },
  {
    id: 'chunkSize',
    envKey: 'CHUNK_SIZE',
    type: 'number',
    defaultValue: 1500,
    category: 'rag',
    description: 'RAG Chunk Size',
    min: 100,
    max: 10000,
  },
  {
    id: 'chunkOverlap',
    envKey: 'CHUNK_OVERLAP',
    type: 'number',
    defaultValue: 100,
    category: 'rag',
    description: 'RAG Chunk Overlap',
    min: 0,
    max: 1000,
  },
  {
    id: 'embeddingsProvider',
    envKey: 'EMBEDDINGS_PROVIDER',
    type: 'string',
    defaultValue: '',
    category: 'rag',
    description: 'RAG Embeddings Provider',
  },
  
  // =============================================================================
  // MeiliSearch
  // =============================================================================
  {
    id: 'meilisearchURL',
    envKey: 'MEILISEARCH_URL',
    type: 'string',
    defaultValue: '',
    category: 'meilisearch',
    description: 'MeiliSearch URL',
  },
  {
    id: 'meilisearchMasterKey',
    envKey: 'MEILISEARCH_MASTER_KEY',
    type: 'string',
    defaultValue: '',
    category: 'meilisearch',
    description: 'MeiliSearch Master Key',
  },
  {
    id: 'meiliNoAnalytics',
    envKey: 'MEILI_NO_ANALYTICS',
    type: 'boolean',
    defaultValue: true,
    category: 'meilisearch',
    description: 'Disable MeiliSearch Analytics',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Rate Limiting & Security
  // =============================================================================
  {
    id: 'limitConcurrentMessages',
    envKey: 'LIMIT_CONCURRENT_MESSAGES',
    type: 'boolean',
    defaultValue: true,
    category: 'rate-limits',
    description: 'Limit Concurrent Messages',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'concurrentMessageMax',
    envKey: 'CONCURRENT_MESSAGE_MAX',
    type: 'number',
    defaultValue: 2,
    category: 'rate-limits',
    description: 'Concurrent Message Maximum',
    min: 1,
    max: 100,
  },
  {
    id: 'banViolations',
    envKey: 'BAN_VIOLATIONS',
    type: 'boolean',
    defaultValue: true,
    category: 'rate-limits',
    description: 'Ban Violations',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'banDuration',
    envKey: 'BAN_DURATION',
    type: 'number',
    defaultValue: 7200000,
    category: 'rate-limits',
    description: 'Ban Duration (ms)',
    min: 60000,
    max: 86400000,
  },
  {
    id: 'banInterval',
    envKey: 'BAN_INTERVAL',
    type: 'number',
    defaultValue: 20,
    category: 'rate-limits',
    description: 'Ban Interval',
    min: 1,
    max: 100,
  },
  {
    id: 'loginViolationScore',
    envKey: 'LOGIN_VIOLATION_SCORE',
    type: 'number',
    defaultValue: 1,
    category: 'rate-limits',
    description: 'Login Violation Score',
    min: 0,
    max: 100,
  },
  {
    id: 'registrationViolationScore',
    envKey: 'REGISTRATION_VIOLATION_SCORE',
    type: 'number',
    defaultValue: 1,
    category: 'rate-limits',
    description: 'Registration Violation Score',
    min: 0,
    max: 100,
  },
  {
    id: 'concurrentViolationScore',
    envKey: 'CONCURRENT_VIOLATION_SCORE',
    type: 'number',
    defaultValue: 1,
    category: 'rate-limits',
    description: 'Concurrent Violation Score',
    min: 0,
    max: 100,
  },
  {
    id: 'messageViolationScore',
    envKey: 'MESSAGE_VIOLATION_SCORE',
    type: 'number',
    defaultValue: 1,
    category: 'rate-limits',
    description: 'Message Violation Score',
    min: 0,
    max: 100,
  },
  {
    id: 'nonBrowserViolationScore',
    envKey: 'NON_BROWSER_VIOLATION_SCORE',
    type: 'number',
    defaultValue: 20,
    category: 'rate-limits',
    description: 'Non-Browser Violation Score',
    min: 0,
    max: 100,
  },
  {
    id: 'loginMax',
    envKey: 'LOGIN_MAX',
    type: 'number',
    defaultValue: 7,
    category: 'rate-limits',
    description: 'Login Maximum Attempts',
    min: 1,
    max: 100,
  },
  {
    id: 'loginWindow',
    envKey: 'LOGIN_WINDOW',
    type: 'number',
    defaultValue: 5,
    category: 'rate-limits',
    description: 'Login Window (minutes)',
    min: 1,
    max: 60,
  },
  
  // =============================================================================
  // LDAP
  // =============================================================================
  {
    id: 'ldapURL',
    envKey: 'LDAP_URL',
    type: 'string',
    defaultValue: '',
    category: 'ldap',
    description: 'LDAP Server URL',
  },
  {
    id: 'ldapBindDN',
    envKey: 'LDAP_BIND_DN',
    type: 'string',
    defaultValue: '',
    category: 'ldap',
    description: 'LDAP Bind DN',
  },
  {
    id: 'ldapBindCredentials',
    envKey: 'LDAP_BIND_CREDENTIALS',
    type: 'string',
    defaultValue: '',
    category: 'ldap',
    description: 'LDAP Bind Credentials',
  },
  {
    id: 'ldapSearchBase',
    envKey: 'LDAP_SEARCH_BASE',
    type: 'string',
    defaultValue: '',
    category: 'ldap',
    description: 'LDAP Search Base',
  },
  {
    id: 'ldapSearchFilter',
    envKey: 'LDAP_SEARCH_FILTER',
    type: 'string',
    defaultValue: '',
    category: 'ldap',
    description: 'LDAP Search Filter',
  },
  
  // =============================================================================
  // Turnstile (Cloudflare Captcha)
  // =============================================================================
  {
    id: 'turnstileSiteKey',
    envKey: 'TURNSTILE_SITE_KEY',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'Cloudflare Turnstile Site Key',
  },
  {
    id: 'turnstileSecretKey',
    envKey: 'TURNSTILE_SECRET_KEY',
    type: 'string',
    defaultValue: '',
    category: 'security',
    description: 'Cloudflare Turnstile Secret Key',
  },
  
  // =============================================================================
  // Features
  // =============================================================================
  {
    id: 'allowSharedLinks',
    envKey: 'ALLOW_SHARED_LINKS',
    type: 'boolean',
    defaultValue: true,
    category: 'features',
    description: 'Allow Shared Links',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'allowSharedLinksPublic',
    envKey: 'ALLOW_SHARED_LINKS_PUBLIC',
    type: 'boolean',
    defaultValue: false,
    category: 'features',
    description: 'Allow Public Shared Links',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'titleConvo',
    envKey: 'TITLE_CONVO',
    type: 'boolean',
    defaultValue: true,
    category: 'features',
    description: 'Enable Conversation Titles',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'summaryConvo',
    envKey: 'SUMMARY_CONVO',
    type: 'boolean',
    defaultValue: false,
    category: 'features',
    description: 'Enable Conversation Summaries',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Caching
  // =============================================================================
  {
    id: 'staticCacheMaxAge',
    envKey: 'STATIC_CACHE_MAX_AGE',
    type: 'string',
    defaultValue: '86400',
    category: 'caching',
    description: 'Static Cache Max Age',
  },
  {
    id: 'staticCacheSMaxAge',
    envKey: 'STATIC_CACHE_S_MAX_AGE',
    type: 'string',
    defaultValue: '86400',
    category: 'caching',
    description: 'Static Cache S-Max-Age',
  },
  {
    id: 'indexCacheControl',
    envKey: 'INDEX_CACHE_CONTROL',
    type: 'string',
    defaultValue: 'no-cache, no-store, must-revalidate',
    category: 'caching',
    description: 'Index Cache Control',
  },
  {
    id: 'indexPragma',
    envKey: 'INDEX_PRAGMA',
    type: 'string',
    defaultValue: 'no-cache',
    category: 'caching',
    description: 'Index Pragma',
  },
  {
    id: 'indexExpires',
    envKey: 'INDEX_EXPIRES',
    type: 'string',
    defaultValue: '0',
    category: 'caching',
    description: 'Index Expires',
  },
  
  // =============================================================================
  // MCP OAuth
  // =============================================================================
  {
    id: 'mcpOauthOnAuthError',
    envKey: 'MCP_OAUTH_ON_AUTH_ERROR',
    type: 'string',
    defaultValue: '',
    category: 'mcp',
    description: 'MCP OAuth On Auth Error',
  },
  {
    id: 'mcpOauthDetectionTimeout',
    envKey: 'MCP_OAUTH_DETECTION_TIMEOUT',
    type: 'number',
    defaultValue: 5000,
    category: 'mcp',
    description: 'MCP OAuth Detection Timeout (ms)',
    min: 1000,
    max: 60000,
  },
  
  // =============================================================================
  // Code Execution
  // =============================================================================
  {
    id: 'librechatCodeApiKey',
    envKey: 'LIBRECHAT_CODE_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'code-execution',
    description: 'LibreChat Code API Key',
  },
  {
    id: 'librechatCodeBaseUrl',
    envKey: 'LIBRECHAT_CODE_BASEURL',
    type: 'string',
    defaultValue: '',
    category: 'code-execution',
    description: 'LibreChat Code Base URL',
  },
  {
    id: 'e2bApiKey',
    envKey: 'E2B_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'code-execution',
    description: 'E2B API Key',
  },
  {
    id: 'e2bProxyEnabled',
    envKey: 'E2B_PROXY_ENABLED',
    type: 'boolean',
    defaultValue: false,
    category: 'code-execution',
    description: 'E2B Proxy Enabled',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'e2bProxyPort',
    envKey: 'E2B_PROXY_PORT',
    type: 'number',
    defaultValue: 49160,
    category: 'code-execution',
    description: 'E2B Proxy Port',
    min: 1,
    max: 65535,
  },
  {
    id: 'e2bPublicBaseUrl',
    envKey: 'E2B_PUBLIC_BASE_URL',
    type: 'string',
    defaultValue: '',
    category: 'code-execution',
    description: 'E2B Public Base URL',
  },
  {
    id: 'e2bFileTTLDays',
    envKey: 'E2B_FILE_TTL_DAYS',
    type: 'number',
    defaultValue: 7,
    category: 'code-execution',
    description: 'E2B File TTL (days)',
    min: 1,
    max: 365,
  },
  {
    id: 'e2bMaxFileSize',
    envKey: 'E2B_MAX_FILE_SIZE',
    type: 'number',
    defaultValue: 10485760,
    category: 'code-execution',
    description: 'E2B Max File Size (bytes)',
    min: 1024,
    max: 104857600,
  },
  {
    id: 'e2bPerUserSandbox',
    envKey: 'E2B_PER_USER_SANDBOX',
    type: 'boolean',
    defaultValue: false,
    category: 'code-execution',
    description: 'E2B Per-User Sandbox',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Artifacts
  // =============================================================================
  {
    id: 'sandpackBundlerUrl',
    envKey: 'SANDPACK_BUNDLER_URL',
    type: 'string',
    defaultValue: '',
    category: 'artifacts',
    description: 'Sandpack Bundler URL',
  },
  
  // =============================================================================
  // User Management
  // =============================================================================
  {
    id: 'uid',
    envKey: 'UID',
    type: 'number',
    defaultValue: 1000,
    category: 'user-management',
    description: 'User ID',
    min: 0,
    max: 65535,
  },
  {
    id: 'gid',
    envKey: 'GID',
    type: 'number',
    defaultValue: 1000,
    category: 'user-management',
    description: 'Group ID',
    min: 0,
    max: 65535,
  },
  
  // =============================================================================
  // Debug
  // =============================================================================
  {
    id: 'debugLogging',
    envKey: 'DEBUG_LOGGING',
    type: 'boolean',
    defaultValue: false,
    category: 'debug',
    description: 'Enable Debug Logging',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'debugConsole',
    envKey: 'DEBUG_CONSOLE',
    type: 'boolean',
    defaultValue: false,
    category: 'debug',
    description: 'Enable Debug Console',
    envTransformer: (val) => val === 'true',
  },
  {
    id: 'consoleJSON',
    envKey: 'CONSOLE_JSON',
    type: 'boolean',
    defaultValue: false,
    category: 'debug',
    description: 'Console JSON Output',
    envTransformer: (val) => val === 'true',
  },
  
  // =============================================================================
  // Miscellaneous
  // =============================================================================
  {
    id: 'cdnProvider',
    envKey: 'CDN_PROVIDER',
    type: 'string',
    defaultValue: '',
    category: 'misc',
    description: 'CDN Provider',
  },
  {
    id: 'ocrApiKey',
    envKey: 'OCR_API_KEY',
    type: 'string',
    defaultValue: '',
    category: 'misc',
    description: 'OCR API Key',
  },
  {
    id: 'ocrApiBase',
    envKey: 'OCR_BASEURL',
    type: 'string',
    defaultValue: '',
    category: 'misc',
    description: 'OCR API Base URL',
  },
  {
    id: 'basePath',
    envKey: 'BASE_PATH',
    type: 'string',
    defaultValue: '',
    category: 'subdirectory',
    description: 'Base Path for subdirectory hosting',
  },
  {
    id: 'appUrl',
    envKey: 'APP_URL',
    type: 'string',
    defaultValue: '',
    category: 'subdirectory',
    description: 'App URL',
  },
  {
    id: 'publicSubPath',
    envKey: 'PUBLIC_SUB_PATH',
    type: 'string',
    defaultValue: '',
    category: 'subdirectory',
    description: 'Public Subdirectory Path',
  },

  // =============================================================================
  // YAML-Only Fields: General Configuration
  // =============================================================================
  {
    id: 'fileStrategy',
    yamlPath: 'fileStrategy',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'File handling strategy',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'imageOutputType',
    yamlPath: 'imageOutputType',
    type: 'string',
    defaultValue: '',
    category: 'app',
    description: 'Image output format',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'secureImageLinks',
    yamlPath: 'secureImageLinks',
    type: 'boolean',
    defaultValue: false,
    category: 'app',
    description: 'Secure image link flag',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'temporaryChatRetention',
    yamlPath: 'temporaryChatRetention',
    type: 'number',
    defaultValue: 720,
    category: 'app',
    description: 'Chat retention time in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Interface Configuration
  // =============================================================================
  {
    id: 'interfaceAgents',
    yamlPath: 'interface.agents',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show agents UI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceModelSelect',
    yamlPath: 'interface.modelSelect',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show model selector',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceParameters',
    yamlPath: 'interface.parameters',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show parameters',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceSidePanel',
    yamlPath: 'interface.sidePanel',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show side panel',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePresets',
    yamlPath: 'interface.presets',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show presets',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePrompts',
    yamlPath: 'interface.prompts',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show prompts',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceBookmarks',
    yamlPath: 'interface.bookmarks',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show bookmarks',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceMultiConvo',
    yamlPath: 'interface.multiConvo',
    type: 'boolean',
    defaultValue: false,
    category: 'interface',
    description: 'Multi-conversation mode',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceWebSearch',
    yamlPath: 'interface.webSearch',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Web search UI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceFileSearch',
    yamlPath: 'interface.fileSearch',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'File search UI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceFileCitations',
    yamlPath: 'interface.fileCitations',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show file citations',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceRunCode',
    yamlPath: 'interface.runCode',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Code execution UI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceArtifacts',
    yamlPath: 'interface.artifacts',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Artifacts support',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceDefaultPreset',
    yamlPath: 'interface.defaultPreset',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'Default preset ID',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceUploadAsText',
    yamlPath: 'interface.uploadAsText',
    type: 'boolean',
    defaultValue: false,
    category: 'interface',
    description: 'Upload files as text',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTemporaryChatRetention',
    yamlPath: 'interface.temporaryChatRetention',
    type: 'number',
    defaultValue: 720,
    category: 'interface',
    description: 'Temporary chat retention time in minutes',
    min: 1,
    max: 43200,
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Web Search Additional Configuration
  // =============================================================================
  {
    id: 'webSearchProvider',
    yamlPath: 'webSearch.searchProvider',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Search provider (serper or searxng)',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchScraperType',
    yamlPath: 'webSearch.scraperType',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Scraper type (firecrawl or jina)',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchRerankerType',
    yamlPath: 'webSearch.rerankerType',
    type: 'string',
    defaultValue: '',
    category: 'web-search',
    description: 'Reranker type (jina or cohere)',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchScraperTimeout',
    yamlPath: 'webSearch.scraperTimeout',
    type: 'number',
    defaultValue: 30000,
    category: 'web-search',
    description: 'Scraper timeout in milliseconds',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'webSearchSafeSearch',
    yamlPath: 'webSearch.safeSearch',
    type: 'number',
    defaultValue: 0,
    category: 'web-search',
    description: 'Safe search level (0-2)',
    min: 0,
    max: 2,
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: OCR Configuration
  // =============================================================================
  {
    id: 'ocrStrategy',
    yamlPath: 'ocr.strategy',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'OCR strategy',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ocrMistralModel',
    yamlPath: 'ocr.mistralModel',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'Mistral model for OCR',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ocrProvider',
    yamlPath: 'ocr.provider',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'OCR provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ocrModel',
    yamlPath: 'ocr.model',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'OCR model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ocrApiKey',
    yamlPath: 'ocr.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'OCR API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ocrBaseURL',
    yamlPath: 'ocr.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'ocr',
    description: 'OCR base URL',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Tools Configuration
  // =============================================================================
  {
    id: 'filteredTools',
    yamlPath: 'filteredTools',
    type: 'array',
    defaultValue: [],
    category: 'tools',
    arrayItemType: 'string',
    description: 'Array of tool names to hide',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'includedTools',
    yamlPath: 'includedTools',
    type: 'array',
    defaultValue: [],
    category: 'tools',
    arrayItemType: 'string',
    description: 'Array of tool names to show',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Rate Limits Configuration
  // =============================================================================
  {
    id: 'rateLimitsFileUploadsIpMax',
    yamlPath: 'rateLimits.fileUploads.ipMax',
    type: 'number',
    defaultValue: 100,
    category: 'rate-limits',
    description: 'File upload rate limit per IP',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsFileUploadsIpWindowInMinutes',
    yamlPath: 'rateLimits.fileUploads.ipWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'File upload IP window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsFileUploadsUserMax',
    yamlPath: 'rateLimits.fileUploads.userMax',
    type: 'number',
    defaultValue: 50,
    category: 'rate-limits',
    description: 'File upload rate limit per user',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsFileUploadsUserWindowInMinutes',
    yamlPath: 'rateLimits.fileUploads.userWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'File upload user window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Speech/STT/TTS Configuration
  // =============================================================================
  {
    id: 'sttProvider',
    yamlPath: 'stt.provider',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech-to-text provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'sttModel',
    yamlPath: 'stt.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'STT model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'sttApiKey',
    yamlPath: 'stt.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'STT API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'sttBaseURL',
    yamlPath: 'stt.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'STT base URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'sttLanguage',
    yamlPath: 'stt.language',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'STT language',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ttsProvider',
    yamlPath: 'tts.provider',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Text-to-speech provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ttsModel',
    yamlPath: 'tts.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'TTS model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ttsApiKey',
    yamlPath: 'tts.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'TTS API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ttsBaseURL',
    yamlPath: 'tts.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'TTS base URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'ttsVoice',
    yamlPath: 'tts.voice',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'TTS voice',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabSpeechToTextProvider',
    yamlPath: 'speech.speechTab.speechToText.provider',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab STT provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabSpeechToTextModel',
    yamlPath: 'speech.speechTab.speechToText.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab STT model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabSpeechToTextApiKey',
    yamlPath: 'speech.speechTab.speechToText.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab STT API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabSpeechToTextBaseURL',
    yamlPath: 'speech.speechTab.speechToText.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab STT base URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabSpeechToTextLanguage',
    yamlPath: 'speech.speechTab.speechToText.language',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab STT language',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabTextToSpeechProvider',
    yamlPath: 'speech.speechTab.textToSpeech.provider',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab TTS provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabTextToSpeechModel',
    yamlPath: 'speech.speechTab.textToSpeech.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab TTS model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabTextToSpeechApiKey',
    yamlPath: 'speech.speechTab.textToSpeech.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab TTS API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabTextToSpeechBaseURL',
    yamlPath: 'speech.speechTab.textToSpeech.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab TTS base URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabTextToSpeechVoice',
    yamlPath: 'speech.speechTab.textToSpeech.voice',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'Speech tab TTS voice',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSpeechTabConversationMode',
    yamlPath: 'speech.speechTab.conversationMode',
    type: 'boolean',
    defaultValue: false,
    category: 'speech',
    description: 'Enable conversation mode in speech tab',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSttOpenaiUrl',
    yamlPath: 'speech.stt.openai.url',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI STT API URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSttOpenaiApiKey',
    yamlPath: 'speech.stt.openai.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI STT API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechSttOpenaiModel',
    yamlPath: 'speech.stt.openai.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI STT model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechTtsOpenaiUrl',
    yamlPath: 'speech.tts.openai.url',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI TTS API URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechTtsOpenaiApiKey',
    yamlPath: 'speech.tts.openai.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI TTS API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechTtsOpenaiModel',
    yamlPath: 'speech.tts.openai.model',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI TTS model',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'speechTtsOpenaiVoice',
    yamlPath: 'speech.tts.openai.voice',
    type: 'string',
    defaultValue: '',
    category: 'speech',
    description: 'OpenAI TTS voice',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Memory Configuration
  // =============================================================================
  {
    id: 'memoryEnabled',
    yamlPath: 'memory.enabled',
    type: 'boolean',
    defaultValue: false,
    category: 'memory',
    description: 'Enable memory feature',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryCollection',
    yamlPath: 'memory.collection',
    type: 'string',
    defaultValue: '',
    category: 'memory',
    description: 'Memory collection name',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryProvider',
    yamlPath: 'memory.provider',
    type: 'string',
    defaultValue: '',
    category: 'memory',
    description: 'Memory provider',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryPersonalization',
    yamlPath: 'memory.personalization',
    type: 'boolean',
    defaultValue: false,
    category: 'memory',
    description: 'Enable personalization',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryWindowSize',
    yamlPath: 'memory.windowSize',
    type: 'number',
    defaultValue: 10,
    category: 'memory',
    description: 'Memory window size',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryTokenLimit',
    yamlPath: 'memory.tokenLimit',
    type: 'number',
    defaultValue: 2000,
    category: 'memory',
    description: 'Memory token limit',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryValidKeys',
    yamlPath: 'memory.validKeys',
    type: 'array',
    defaultValue: [],
    category: 'memory',
    arrayItemType: 'string',
    description: 'Valid memory keys',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryAgent',
    yamlPath: 'memory.agent',
    type: 'string',
    defaultValue: '',
    category: 'memory',
    description: 'Memory agent',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryDisabled',
    yamlPath: 'memory.disabled',
    type: 'boolean',
    defaultValue: false,
    category: 'memory',
    description: 'Disable memory feature',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryPersonalize',
    yamlPath: 'memory.personalize',
    type: 'boolean',
    defaultValue: false,
    category: 'memory',
    description: 'Enable personalized memory',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'memoryMessageWindowSize',
    yamlPath: 'memory.messageWindowSize',
    type: 'number',
    defaultValue: 10,
    category: 'memory',
    description: 'Message window size for memory context',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Actions Configuration
  // =============================================================================
  {
    id: 'actionsAllowedDomains',
    yamlPath: 'actions.allowedDomains',
    type: 'array',
    defaultValue: [],
    category: 'actions',
    arrayItemType: 'string',
    description: 'Allowed domains for actions',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'actionsE2bCodeExecutionEnabled',
    yamlPath: 'actions.e2b_code_execution.enabled',
    type: 'boolean',
    defaultValue: false,
    category: 'actions',
    description: 'Enable E2B code execution action',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'actionsE2bCodeExecutionApiKey',
    yamlPath: 'actions.e2b_code_execution.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'actions',
    description: 'E2B code execution API key',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'actionsE2bCodeExecutionTimeout',
    yamlPath: 'actions.e2b_code_execution.timeout',
    type: 'number',
    defaultValue: 60000,
    category: 'actions',
    description: 'E2B code execution timeout in milliseconds',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'actionsE2bCodeExecutionMaxFileSize',
    yamlPath: 'actions.e2b_code_execution.maxFileSize',
    type: 'number',
    defaultValue: 10485760,
    category: 'actions',
    description: 'E2B max file size in bytes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'actionsE2bCodeExecutionEnvironment',
    yamlPath: 'actions.e2b_code_execution.environment',
    type: 'string',
    defaultValue: 'python',
    category: 'actions',
    description: 'E2B execution environment',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Registration Configuration
  // =============================================================================
  {
    id: 'registrationAllowedDomains',
    yamlPath: 'registration.allowedDomains',
    type: 'array',
    defaultValue: [],
    category: 'registration',
    arrayItemType: 'string',
    description: 'Allowed email domains for registration',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'registrationSocialLogins',
    yamlPath: 'registration.socialLogins',
    type: 'array',
    defaultValue: [],
    category: 'registration',
    arrayItemType: 'string',
    description: 'Enabled social login providers',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Model Specs / Presets Configuration
  // =============================================================================
  {
    id: 'modelSpecsEnforce',
    yamlPath: 'modelSpecs.enforce',
    type: 'boolean',
    defaultValue: false,
    category: 'model-specs',
    description: 'Enforce model specs',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'modelSpecsPrioritize',
    yamlPath: 'modelSpecs.prioritize',
    type: 'boolean',
    defaultValue: false,
    category: 'model-specs',
    description: 'Prioritize model specs',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'modelSpecsAddedEndpoints',
    yamlPath: 'modelSpecs.addedEndpoints',
    type: 'array',
    defaultValue: [],
    category: 'model-specs',
    arrayItemType: 'string',
    description: 'Array of added endpoint names',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: File Config
  // =============================================================================
  {
    id: 'fileConfigServerFileSizeLimit',
    yamlPath: 'fileConfig.serverFileSizeLimit',
    type: 'number',
    defaultValue: 100,
    category: 'file-config',
    description: 'Server file size limit in MB',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigAvatarSizeLimit',
    yamlPath: 'fileConfig.avatarSizeLimit',
    type: 'number',
    defaultValue: 2,
    category: 'file-config',
    description: 'Avatar size limit in MB',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigClientImageResizeEnabled',
    yamlPath: 'fileConfig.clientImageResize.enabled',
    type: 'boolean',
    defaultValue: false,
    category: 'file-config',
    description: 'Enable client-side image resizing',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigClientImageResizeMaxWidth',
    yamlPath: 'fileConfig.clientImageResize.maxWidth',
    type: 'number',
    defaultValue: 1920,
    category: 'file-config',
    description: 'Max image width in pixels',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigClientImageResizeMaxHeight',
    yamlPath: 'fileConfig.clientImageResize.maxHeight',
    type: 'number',
    defaultValue: 1080,
    category: 'file-config',
    description: 'Max image height in pixels',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigClientImageResizeQuality',
    yamlPath: 'fileConfig.clientImageResize.quality',
    type: 'number',
    defaultValue: 0.8,
    category: 'file-config',
    description: 'Image compression quality (0-1)',
    min: 0,
    max: 1,
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigClientImageResizeCompressFormat',
    yamlPath: 'fileConfig.clientImageResize.compressFormat',
    type: 'string',
    defaultValue: 'webp',
    category: 'file-config',
    description: 'Image compression format (jpeg, webp)',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigEndpointsOpenAIFileLimit',
    yamlPath: 'fileConfig.endpoints.openAI.fileLimit',
    type: 'number',
    defaultValue: 10,
    category: 'file-config',
    description: 'OpenAI endpoint file limit',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigEndpointsOpenAIFileSizeLimit',
    yamlPath: 'fileConfig.endpoints.openAI.fileSizeLimit',
    type: 'number',
    defaultValue: 10,
    category: 'file-config',
    description: 'OpenAI endpoint file size limit in MB',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigEndpointsOpenAITotalSizeLimit',
    yamlPath: 'fileConfig.endpoints.openAI.totalSizeLimit',
    type: 'number',
    defaultValue: 50,
    category: 'file-config',
    description: 'OpenAI endpoint total size limit in MB',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'fileConfigEndpointsOpenAISupportedMimeTypes',
    yamlPath: 'fileConfig.endpoints.openAI.supportedMimeTypes',
    type: 'array',
    defaultValue: [],
    category: 'file-config',
    arrayItemType: 'string',
    description: 'OpenAI endpoint supported MIME types',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Additional Interface Nested Objects
  // =============================================================================
  {
    id: 'interfaceMarketplaceUse',
    yamlPath: 'interface.marketplace.use',
    type: 'boolean',
    defaultValue: false,
    category: 'interface',
    description: 'Enable marketplace feature',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceMcpServersPlaceholder',
    yamlPath: 'interface.mcpServers.placeholder',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'MCP servers placeholder text',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePrivacyPolicyExternalUrl',
    yamlPath: 'interface.privacyPolicy.externalUrl',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'Privacy policy external URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePrivacyPolicyOpenNewTab',
    yamlPath: 'interface.privacyPolicy.openNewTab',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Open privacy policy in new tab',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTermsOfServiceExternalUrl',
    yamlPath: 'interface.termsOfService.externalUrl',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'Terms of service external URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTermsOfServiceOpenNewTab',
    yamlPath: 'interface.termsOfService.openNewTab',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Open terms of service in new tab',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTermsOfServiceModalAcceptance',
    yamlPath: 'interface.termsOfService.modalAcceptance',
    type: 'boolean',
    defaultValue: false,
    category: 'interface',
    description: 'Require modal acceptance of terms',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTermsOfServiceModalTitle',
    yamlPath: 'interface.termsOfService.modalTitle',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'Terms modal title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfaceTermsOfServiceModalContent',
    yamlPath: 'interface.termsOfService.modalContent',
    type: 'string',
    defaultValue: '',
    category: 'interface',
    description: 'Terms modal content',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePeoplePickerUsers',
    yamlPath: 'interface.peoplePicker.users',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show users in people picker',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePeoplePickerGroups',
    yamlPath: 'interface.peoplePicker.groups',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show groups in people picker',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'interfacePeoplePickerRoles',
    yamlPath: 'interface.peoplePicker.roles',
    type: 'boolean',
    defaultValue: true,
    category: 'interface',
    description: 'Show roles in people picker',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Additional Rate Limits
  // =============================================================================
  {
    id: 'rateLimitsConversationsImportIpMax',
    yamlPath: 'rateLimits.conversationsImport.ipMax',
    type: 'number',
    defaultValue: 50,
    category: 'rate-limits',
    description: 'Conversation import rate limit per IP',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsConversationsImportIpWindowInMinutes',
    yamlPath: 'rateLimits.conversationsImport.ipWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'Conversation import IP window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsConversationsImportUserMax',
    yamlPath: 'rateLimits.conversationsImport.userMax',
    type: 'number',
    defaultValue: 25,
    category: 'rate-limits',
    description: 'Conversation import rate limit per user',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsConversationsImportUserWindowInMinutes',
    yamlPath: 'rateLimits.conversationsImport.userWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'Conversation import user window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsTtsIpMax',
    yamlPath: 'rateLimits.tts.ipMax',
    type: 'number',
    defaultValue: 100,
    category: 'rate-limits',
    description: 'TTS rate limit per IP',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsTtsIpWindowInMinutes',
    yamlPath: 'rateLimits.tts.ipWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'TTS IP window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsTtsUserMax',
    yamlPath: 'rateLimits.tts.userMax',
    type: 'number',
    defaultValue: 50,
    category: 'rate-limits',
    description: 'TTS rate limit per user',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsTtsUserWindowInMinutes',
    yamlPath: 'rateLimits.tts.userWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'TTS user window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsSttIpMax',
    yamlPath: 'rateLimits.stt.ipMax',
    type: 'number',
    defaultValue: 100,
    category: 'rate-limits',
    description: 'STT rate limit per IP',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsSttIpWindowInMinutes',
    yamlPath: 'rateLimits.stt.ipWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'STT IP window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsSttUserMax',
    yamlPath: 'rateLimits.stt.userMax',
    type: 'number',
    defaultValue: 50,
    category: 'rate-limits',
    description: 'STT rate limit per user',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsSttUserWindowInMinutes',
    yamlPath: 'rateLimits.stt.userWindowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'STT user window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsPerUserMax',
    yamlPath: 'rateLimits.perUser.max',
    type: 'number',
    defaultValue: 100,
    category: 'rate-limits',
    description: 'General rate limit per user',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsPerUserWindowInMinutes',
    yamlPath: 'rateLimits.perUser.windowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'General user window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsPerIpMax',
    yamlPath: 'rateLimits.perIP.max',
    type: 'number',
    defaultValue: 200,
    category: 'rate-limits',
    description: 'General rate limit per IP',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'rateLimitsPerIpWindowInMinutes',
    yamlPath: 'rateLimits.perIP.windowInMinutes',
    type: 'number',
    defaultValue: 60,
    category: 'rate-limits',
    description: 'General IP window in minutes',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Endpoints Configuration (selected high-priority fields)
  // =============================================================================
  {
    id: 'endpointsAgentsDisableBuilder',
    yamlPath: 'endpoints.agents.disableBuilder',
    type: 'boolean',
    defaultValue: false,
    category: 'endpoints',
    description: 'Disable agent builder',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsRecursionLimit',
    yamlPath: 'endpoints.agents.recursionLimit',
    type: 'number',
    defaultValue: 50,
    category: 'endpoints',
    description: 'Agent recursion limit',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsMaxRecursionLimit',
    yamlPath: 'endpoints.agents.maxRecursionLimit',
    type: 'number',
    defaultValue: 100,
    category: 'endpoints',
    description: 'Agent max recursion limit',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsCapabilities',
    yamlPath: 'endpoints.agents.capabilities',
    type: 'array',
    defaultValue: ['execute_code', 'file_search', 'actions', 'tools', 'artifacts', 'context', 'ocr', 'chain', 'web_search'],
    category: 'endpoints',
    arrayItemType: 'string',
    description: 'Enabled agent capabilities',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsMaxCitations',
    yamlPath: 'endpoints.agents.maxCitations',
    type: 'number',
    defaultValue: 30,
    category: 'endpoints',
    description: 'Maximum citations for agents',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsMaxCitationsPerFile',
    yamlPath: 'endpoints.agents.maxCitationsPerFile',
    type: 'number',
    defaultValue: 7,
    category: 'endpoints',
    description: 'Maximum citations per file',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAgentsMinRelevanceScore',
    yamlPath: 'endpoints.agents.minRelevanceScore',
    type: 'number',
    defaultValue: 0.45,
    category: 'endpoints',
    description: 'Minimum relevance score for citations',
    min: 0,
    max: 1,
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAITitle',
    yamlPath: 'endpoints.openAI.title',
    type: 'string',
    defaultValue: 'OpenAI',
    category: 'endpoints',
    description: 'OpenAI endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAITitleConvo',
    yamlPath: 'endpoints.openAI.titleConvo',
    type: 'boolean',
    defaultValue: true,
    category: 'endpoints',
    description: 'Enable conversation title generation for OpenAI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAITitleModel',
    yamlPath: 'endpoints.openAI.titleModel',
    type: 'string',
    defaultValue: 'gpt-3.5-turbo',
    category: 'endpoints',
    description: 'Model for title generation',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIApiKey',
    yamlPath: 'endpoints.openAI.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'OpenAI API key reference',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIBaseURL',
    yamlPath: 'endpoints.openAI.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'OpenAI base URL for custom endpoints',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIModels',
    yamlPath: 'endpoints.openAI.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'OpenAI models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIModelsFetch',
    yamlPath: 'endpoints.openAI.models.fetch',
    type: 'boolean',
    defaultValue: true,
    category: 'endpoints',
    description: 'Fetch available models from OpenAI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIModelsDefault',
    yamlPath: 'endpoints.openAI.models.default',
    type: 'array',
    defaultValue: [],
    category: 'endpoints',
    arrayItemType: 'string',
    description: 'Default OpenAI models',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsOpenAIDropParams',
    yamlPath: 'endpoints.openAI.dropParams',
    type: 'array',
    defaultValue: ['frequency_penalty', 'presence_penalty', 'stop', 'user'],
    category: 'endpoints',
    arrayItemType: 'string',
    description: 'Parameters to drop for OpenAI',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicTitle',
    yamlPath: 'endpoints.anthropic.title',
    type: 'string',
    defaultValue: 'Anthropic',
    category: 'endpoints',
    description: 'Anthropic endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicApiKey',
    yamlPath: 'endpoints.anthropic.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Anthropic API key reference',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicModelsFetch',
    yamlPath: 'endpoints.anthropic.models.fetch',
    type: 'boolean',
    defaultValue: true,
    category: 'endpoints',
    description: 'Fetch available models from Anthropic',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicModelsDefault',
    yamlPath: 'endpoints.anthropic.models.default',
    type: 'array',
    defaultValue: [],
    category: 'endpoints',
    arrayItemType: 'string',
    description: 'Default Anthropic models',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicTitleConvo',
    yamlPath: 'endpoints.anthropic.titleConvo',
    type: 'boolean',
    defaultValue: true,
    category: 'endpoints',
    description: 'Enable conversation title generation for Anthropic',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicBaseURL',
    yamlPath: 'endpoints.anthropic.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Anthropic base URL for custom endpoints',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAnthropicModels',
    yamlPath: 'endpoints.anthropic.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'Anthropic models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleTitle',
    yamlPath: 'endpoints.google.title',
    type: 'string',
    defaultValue: 'Google',
    category: 'endpoints',
    description: 'Google endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleApiKey',
    yamlPath: 'endpoints.google.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Google API key reference',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleModelsFetch',
    yamlPath: 'endpoints.google.models.fetch',
    type: 'boolean',
    defaultValue: true,
    category: 'endpoints',
    description: 'Fetch available models from Google',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleModelsDefault',
    yamlPath: 'endpoints.google.models.default',
    type: 'array',
    defaultValue: [],
    category: 'endpoints',
    arrayItemType: 'string',
    description: 'Default Google models',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleBaseURL',
    yamlPath: 'endpoints.google.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Google base URL for custom endpoints',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGoogleModels',
    yamlPath: 'endpoints.google.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'Google models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsMistralTitle',
    yamlPath: 'endpoints.mistral.title',
    type: 'string',
    defaultValue: 'Mistral',
    category: 'endpoints',
    description: 'Mistral endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsMistralApiKey',
    yamlPath: 'endpoints.mistral.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Mistral API key reference',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsMistralBaseURL',
    yamlPath: 'endpoints.mistral.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Mistral base URL for custom endpoints',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsMistralModels',
    yamlPath: 'endpoints.mistral.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'Mistral models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAITitle',
    yamlPath: 'endpoints.azureOpenAI.title',
    type: 'string',
    defaultValue: 'Azure OpenAI',
    category: 'endpoints',
    description: 'Azure OpenAI endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAIApiKey',
    yamlPath: 'endpoints.azureOpenAI.apiKey',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Azure OpenAI API key reference',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAIInstanceName',
    yamlPath: 'endpoints.azureOpenAI.instanceName',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Azure OpenAI instance name',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAIVersion',
    yamlPath: 'endpoints.azureOpenAI.version',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Azure OpenAI API version',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAIBaseURL',
    yamlPath: 'endpoints.azureOpenAI.baseURL',
    type: 'string',
    defaultValue: '',
    category: 'endpoints',
    description: 'Azure OpenAI base URL',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsAzureOpenAIModels',
    yamlPath: 'endpoints.azureOpenAI.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'Azure OpenAI models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGptPluginsTitle',
    yamlPath: 'endpoints.gptPlugins.title',
    type: 'string',
    defaultValue: 'Plugins',
    category: 'endpoints',
    description: 'GPT Plugins endpoint display title',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'endpointsGptPluginsModels',
    yamlPath: 'endpoints.gptPlugins.models',
    type: 'object',
    defaultValue: {},
    category: 'endpoints',
    description: 'GPT Plugins models configuration object',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'registrationEnabled',
    yamlPath: 'registration.enabled',
    type: 'boolean',
    defaultValue: true,
    category: 'registration',
    description: 'Enable user registration',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Custom Endpoints Configuration
  // =============================================================================
  {
    id: 'customEndpoints',
    yamlPath: 'endpoints.custom',
    type: 'array',
    defaultValue: [],
    category: 'endpoints',
    arrayItemType: 'object',
    description: 'Array of custom endpoint configurations',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: MCP Servers Configuration
  // =============================================================================
  {
    id: 'mcpServers',
    yamlPath: 'mcpServers',
    type: 'object',
    defaultValue: {},
    category: 'mcp',
    description: 'Model Context Protocol server configurations (dynamic object)',
    exportToEnv: false,
    exportToYaml: true,
  },

  // =============================================================================
  // YAML-Only Fields: Model Specs List
  // =============================================================================
  {
    id: 'modelSpecsList',
    yamlPath: 'modelSpecs.list',
    type: 'array',
    defaultValue: [],
    category: 'model-specs',
    arrayItemType: 'object',
    description: 'Array of model spec preset objects',
    exportToEnv: false,
    exportToYaml: true,
  },
  {
    id: 'modelSpecsAddedEndpoints',
    yamlPath: 'modelSpecs.addedEndpoints',
    type: 'array',
    defaultValue: [],
    category: 'model-specs',
    arrayItemType: 'string',
    description: 'Array of added endpoint names',
    exportToEnv: false,
    exportToYaml: true,
  },
];

/**
 * Helper: Get all fields that have ENV keys
 */
export function getEnvFields(): FieldDescriptor[] {
  return FIELD_REGISTRY.filter(f => f.envKey && f.exportToEnv !== false);
}

/**
 * Helper: Get all fields that have YAML paths
 */
export function getYamlFields(): FieldDescriptor[] {
  return FIELD_REGISTRY.filter(f => f.yamlPath && f.exportToYaml !== false);
}

/**
 * Helper: Get field by ID
 */
export function getFieldById(id: string): FieldDescriptor | undefined {
  return FIELD_REGISTRY.find(f => f.id === id);
}

/**
 * Helper: Get field by ENV key
 */
export function getFieldByEnvKey(envKey: string): FieldDescriptor | undefined {
  return FIELD_REGISTRY.find(f => f.envKey === envKey);
}

/**
 * Helper: Get field by YAML path
 */
export function getFieldByYamlPath(yamlPath: string): FieldDescriptor | undefined {
  return FIELD_REGISTRY.find(f => f.yamlPath === yamlPath);
}

/**
 * Helper: Get all ENV keys (for validation)
 */
export function getAllEnvKeys(): Set<string> {
  return new Set(getEnvFields().map(f => f.envKey!));
}

/**
 * Helper: Get all YAML paths (for validation)
 */
export function getAllYamlPaths(): Set<string> {
  return new Set(getYamlFields().map(f => f.yamlPath!));
}

/**
 * Helper: Generate default configuration object
 */
export function generateDefaults(): Record<string, any> {
  const defaults: Record<string, any> = {};
  
  for (const field of FIELD_REGISTRY) {
    defaults[field.id] = field.defaultValue;
  }
  
  return defaults;
}
